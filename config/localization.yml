# Configuration for overlap network (includes training)

# ----------------------------------------------
# Experiment definition
#

# Path where all experiments are stored. Data of current experiment
# will be in experiments_path/testname
experiments_path: "../data/training_log"

# String which defines experiment
testname: ""

# weights from older training. Not used if empty
pretrained_weightsfilename: '../data/model.weight'

# What input to use ?
# Be aware that the networks will have different number of weights, thus
# a model trained with only depth cannot be used together with normals
use_depth: True                    # default: True if parameter not there
use_normals: True                  # default: True if parameter not there
use_class_probabilities: False     # default: False if parameter not there
use_class_probabilities_pca: False # default: False if parameter not there.
use_intensity: False               # default: False if parameter not there

# ----------------------------------------------
# Train and test data
#
# the folder of dataset
data_root_folder: '../data'

# use multiple seqs for training, for testing phase please disable it
training_seqs: '07'
#   

# use multiple seqs for testing, for training phase please disable it
testing_seqs: '07'

# seq label for inferring, query part (left leg)
infer_seqs_query: '07/query'
# seq label for inferring, map part (right leg)
infer_seqs_map: '07/map'

batch_size :  16
# No of batches per epoch, thus the actual used train data is 
# batch_size*no_batches_in_epoch. If bigger than traindata, all traindata
# is used.
no_batches_in_epoch : 100000000000
no_epochs :  4000
# No of samples for validation. If bigger than testdata, all testdata is used.
no_test_pairs :  100000000000



# ----------------------------------------------
# Training parameters
#
learning_rate: 0.0005 #0.0005
momentum: 0.5
learning_rate_decay: 1.0e-06
min_overlap_for_angle: 0.7


# ----------------------------------------------
# Model definition
#
model:
  # Name of model.
  modelType: 'SiameseNetworkTemplate'
  ##modelType: 'DeltaLayerConv1Network'
  # If the model is the generic SiameseNetworkTemplate, then the name of the
  # leg and head can be given here
  legsType: '360OutputkLegs'
  overlap_head: 'DeltaLayerConv1NetworkHead'
  orientation_head: 'CorrelationHead'
  # size of one input image, thus input size of one leg of siamese network (heightxwidth)
  # no_channels are defined due to used inputs channels above.
  inputShape: [64,900]
  # leg output width
  leg_output_width: 360
  # Strides in first layer. Default is [2,2] which is useful for standard images
  strides_layer1: [2,2]
  # an additional layer 3a will be added with stride(1,2) with the following option.
  # default: False
  additional_unsymmetric_layer3a: True

# ----------------------------------------------
# Special settings for validation
#
show_plots: True


# ----------------------------------------------
# Parameter settings for Monte Carlo Localization
#
# Inputs
# the folder of raw LiDAR scans
scan_folder: '../data/07/velodyne'
# ground truth poses file
pose_file: '../data/07/poses.txt'
# calibration file
calib_file: '../data/07/calib.txt'

# start frame index
start_index: 0
  
# resolution of grid is 20 cm
resolution: 0.2
 
# number of particles
numParticles: 10000

# when the number of occupied grids is smaller than the threshold,
# we say the localization converged. Using -1 to disable this.
converge_thres: 50

# after convergency, we reduce the number of particles and using only num_reduced particles.
num_reduced: 200

# only update the weights when the car is moving larger than the move_thres  
move_thres: 0.1

# the sigma of the Gaussian model for yaw estimation in degree
yaw_sigma: 10.0 

# visualize the localization results online
visualize: True 

# save the particles of every frame for later evaluation or offline visualization
save_result: True

# whether to use yaw estiamtion to update the weights
use_yaw: True

# range image parameters
range_image:
  height: 64
  width: 900
  fov_up: 3.0
  fov_down: -25.0
  max_range: 50.0
  min_range: 2.0

